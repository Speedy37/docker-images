#!/bin/sh

container=$1
passphrase=$2
name=$3
hour=$4
sysname=$5

volumes=$(docker inspect --format='{{ range $key, $value := .Volumes }}--include={{ $key }} {{ end }}' $container)
runvolumes=$(docker inspect --format='{{ range $key, $value := .Volumes }}-v {{ $key }} {{ end }}' $container)
runimage=$(docker inspect --format='{{.Config.Image}}' $container)
restorevolumes=$(docker inspect --format='{{ range $key, $value := .Volumes }} \
	 && rsync -va --remove-source-files --delete /restored{{ $key }} {{ $key }}{{ end }}' $container)

create="/usr/bin/docker run \\
		--name=${container}.restored \\
		$runvolumes \\
		$runimage \\
		/bin/echo Data"

restore="/usr/bin/docker run --rm \\
                -e PASSPHRASE=$passphrase \\
                --name=${container}.restore \\
                --volumes-from ${container}.restored \\
        private/speedy-backup \\
                sh -c 'duplicity restore cf+hubic://$container /restored$restorevolumes'"

command="/usr/bin/docker run --rm \\
		-e PASSPHRASE=$passphrase \\
	       	--name=${container}.backup \\
	       	--volumes-from $container \\
	private/speedy-backup duplicity \\
		--volsize=256 \\
		--full-if-older-than 1M \\
		--allow-source-mismatch \\
		$volumes \\
		--exclude '**' / \\
		cf+hubic://$container"

timer="[Unit]
Description=$name backup to hubic

[Timer]
OnCalendar=*-*-* $hour:00:00

[Install]
WantedBy=timers.target"

service="[Unit]
Description=$name backup to hubic
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
ExecStart=$command"

echo "------------------------------------"
echo "-- Info ----------------------------"
echo "   container: $container"
echo "  passphrase: $passphrase"
echo "        name: $name"
echo "        hour: $hour"
echo "       image: $runimage"
echo ""
echo "------------------------------------"
echo "-- Timer & Service -----------------"
echo "$timer"
echo "------------------------------------"
echo "$service"
echo ""
echo "------------------------------------"
echo "-- Recreate & Restore --------------"
echo "$create"
echo "------------------------------------"
echo "$restore"
echo "------------------------------------"

case $6 in
  install)
    echo "$timer" > /etc/systemd/system/${sysname}.backup.timer
    echo "$service" > /etc/systemd/system/${sysname}.backup.service
    echo "Installed to /etc/systemd/system/${sysname}.backup."
    systemctl daemon-reload    
    systemctl start ${sysname}.backup.timer
    systemctl enable ${sysname}.backup.timer
    echo "Timer started & enabled"
    break;;
esac
